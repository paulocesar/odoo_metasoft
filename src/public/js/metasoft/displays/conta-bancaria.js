// Generated by CoffeeScript 1.9.0
(function() {
  var ContaBancaria, Metasoft, fieldValidator, jsRoot, _,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __hasProp = {}.hasOwnProperty;

  jsRoot = this;

  _ = jsRoot._, Metasoft = jsRoot.Metasoft;

  fieldValidator = Metasoft.fieldValidator;

  ContaBancaria = (function(_super) {
    __extends(ContaBancaria, _super);

    function ContaBancaria(opts) {
      this.filterTerms = __bind(this.filterTerms, this);
      this.renderAccounts = __bind(this.renderAccounts, this);
      this.onClickSave = __bind(this.onClickSave, this);
      this.events = {
        'click .conta-banco-list tr': 'showBankAccount',
        'click .save': 'onClickSave',
        'click .new': 'onClickReset',
        'keyup .conta-banco-busca': 'filterTerms'
      };
      this.tpls = {
        bankList: _.template($('#tpl-display-contaBancaria-itemConta').html())
      };
      this.accounts = [];
      ContaBancaria.__super__.constructor.apply(this, arguments);
      this.post('financeiro/listaContaBancaria', {
        empresaId: 1
      }, this.renderAccounts);
    }

    ContaBancaria.prototype.onClickReset = function() {
      fieldValidator.reset(this.$el.find('.form-conta-banco'));
      this.id = null;
      return this.updateButtonsDom();
    };

    ContaBancaria.prototype.onClickSave = function() {
      var data, form;
      form = this.$el.find('.form-conta-banco');
      if (!fieldValidator.isValid(form, true)) {
        return;
      }
      data = fieldValidator.getValues(form);
      if (this.id != null) {
        data.id = this.id;
      }
      data.empresaId = 1;
      return this.post('financeiro/upsertContaBancaria', data, this.renderAccounts);
    };

    ContaBancaria.prototype.renderAccounts = function(_at_accounts) {
      this.accounts = _at_accounts;
      this.$el.find('.conta-banco-list').html(this.tpls.bankList({
        contas: this.accounts
      }));
      return this.filterTerms();
    };

    ContaBancaria.prototype.filterTerms = function() {
      var query;
      query = this.$el.find('.conta-banco-busca').val();
      return Metasoft.filter(this.$el.find('.conta-banco-list'), query);
    };

    ContaBancaria.prototype.showBankAccount = function(ev) {
      var account, form;
      this.id = $(ev.currentTarget).data('rowid');
      account = _.findWhere(this.accounts, {
        id: this.id
      });
      form = this.$el.find('.form-conta-banco');
      fieldValidator.fill(form, account);
      return this.updateButtonsDom();
    };

    ContaBancaria.prototype.updateButtonsDom = function() {
      this.$el.find('.new').toggleClass('hidden', this.id == null);
      return this.$el.find('.remove').toggleClass('hidden', this.id == null);
    };

    return ContaBancaria;

  })(Metasoft.Display);

  Metasoft.displays.ContaBancaria = ContaBancaria;

}).call(this);
