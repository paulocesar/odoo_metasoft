// Generated by CoffeeScript 1.9.0
(function() {
  var Metasoft, Transferencias, fieldSearch, fieldValidator, jsRoot, moment, _,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __hasProp = {}.hasOwnProperty;

  jsRoot = this;

  _ = jsRoot._, Metasoft = jsRoot.Metasoft, moment = jsRoot.moment;

  fieldValidator = Metasoft.fieldValidator, fieldSearch = Metasoft.fieldSearch;

  Transferencias = (function(_super) {
    __extends(Transferencias, _super);

    function Transferencias(opts) {
      this.renderAccounts = __bind(this.renderAccounts, this);
      this.renderTransferencias = __bind(this.renderTransferencias, this);
      this.doSearch = __bind(this.doSearch, this);
      this.onShow = __bind(this.onShow, this);
      this.doSearch = __bind(this.doSearch, this);
      this.model = 'transferencia';
      this.events = {
        'click tr.conta': 'onClickConta'
      };
      Transferencias.__super__.constructor.apply(this, arguments);
      this.tplAcctounts = _.template($('#tpl-transferencia-contas').html());
      this.tplTransf = _.template($('#tpl-transferencia-listItem').html());
      this.search = fieldSearch({
        el: '#transfereciaSearchForm',
        model: this.model,
        action: 'list'
      });
      this.search.on('search:done', this.renderTransferencias);
      this.reset();
    }

    Transferencias.prototype.doSearch = function() {
      return this.search.doSearch();
    };

    Transferencias.prototype.onShow = function() {
      var data;
      data = {
        table: 'contaBancaria',
        withEmpresa: true
      };
      return this.post('crud/list', data, (function(_this) {
        return function(contas) {
          _this.renderAccounts(contas);
          _this.setSelectedAccount(contas[0].id);
          return _this.doSearch();
        };
      })(this));
    };

    Transferencias.prototype.onClickConta = function(ev) {
      var contaBancariaId;
      contaBancariaId = $(ev.currentTarget).data('rowid');
      return this.setSelectedAccount(contaBancariaId);
    };

    Transferencias.prototype.doSearch = function() {
      return this.search.doSearch();
    };

    Transferencias.prototype.renderTransferencias = function(transferencias) {
      return this.$('.list-transferencias').html(this.tplTransf({
        contaBancariaId: this.contaBancariaId,
        transferencias: transferencias
      }));
    };

    Transferencias.prototype.renderAccounts = function(contas) {
      return this.$('.list-transferencia-contas').html(this.tplAcctounts({
        contas: contas
      }));
    };

    Transferencias.prototype.reset = function() {
      return fieldValidator.fill(this.$('#transfereciaSearchForm'), {
        query: '',
        periodo: 'dia',
        data: moment().format('YYYY-MM-DD 00:00:00')
      });
    };

    Transferencias.prototype.setSelectedAccount = function(_at_contaBancariaId) {
      this.contaBancariaId = _at_contaBancariaId;
      return this.search.setOptions({
        contaBancariaId: this.contaBancariaId
      });
    };

    return Transferencias;

  })(Metasoft.Display);

  Metasoft.displays.Transferencias = Transferencias;

}).call(this);
