// Generated by CoffeeScript 1.9.0
(function() {
  var Backbone, DisplayModal, DropdownSearch, Metasoft, ParcelaModal, fieldValidator, jsRoot, moment, money, _,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __hasProp = {}.hasOwnProperty;

  jsRoot = this;

  _ = jsRoot._, Backbone = jsRoot.Backbone, moment = jsRoot.moment, Metasoft = jsRoot.Metasoft;

  fieldValidator = Metasoft.fieldValidator, money = Metasoft.money, DisplayModal = Metasoft.DisplayModal, DropdownSearch = Metasoft.DropdownSearch;

  ParcelaModal = (function(_super) {
    __extends(ParcelaModal, _super);

    function ParcelaModal(opts) {
      _.extend(this, opts);
      this.el = "#modalParcela";
      this.events = {
        'click .save': 'onClickSave'
      };
      ParcelaModal.__super__.constructor.apply(this, arguments);
      this.$formTop = this.$('.form-crud');
      fieldValidator.apply(this.$el);
      this.$('.dropdownSearchParceiro').html(DropdownSearch.html('parceiroId'));
      this.dropdownSearch = new DropdownSearch({
        el: "#" + (this.$el.attr('id')) + " .dropdownSearchParceiro",
        name: 'parceiro',
        model: 'parceiro',
        action: 'search'
      });
    }

    ParcelaModal.prototype.onShow = function() {
      var _base;
      this.setMoneyColorCls();
      if ((_base = this.parcela).dataPagamento == null) {
        _base.dataPagamento = Metasoft.now();
      }
      return fieldValidator.fill(this.$el, this.parcela);
    };

    ParcelaModal.prototype.onClickSave = function() {
      var data;
      if (this.parcela.pago === 1) {
        return;
      }
      data = {
        parcela: fieldValidator.getValues(this.$el)
      };
      return this.postModel('lancamento', 'pay', data, (function(_this) {
        return function() {
          _this.trigger('lancamento:pay', _this.parcela.id);
          return _this.hide();
        };
      })(this));
    };

    ParcelaModal.prototype.setParcela = function(_at_parcela, _at_action) {
      this.parcela = _at_parcela;
      this.action = _at_action;
    };

    ParcelaModal.prototype.setMoneyColorCls = function() {
      var cls;
      cls = 'invert-money-color';
      this.$el.removeClass(cls);
      if (this.parcela.tipoConta === dictionary.tipoConta.pagar) {
        return this.$el.addClass(cls);
      }
    };

    return ParcelaModal;

  })(DisplayModal);

  Metasoft.modals.Parcela = ParcelaModal;

}).call(this);
