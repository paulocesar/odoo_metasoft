// Generated by CoffeeScript 1.9.0
(function() {
  var $, F, FieldSearch, Metasoft, jsRoot, _,
    __slice = [].slice,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __hasProp = {}.hasOwnProperty;

  jsRoot = this;

  _ = jsRoot._, $ = jsRoot.$, Metasoft = jsRoot.Metasoft;

  F = Metasoft.F;

  jsRoot.fieldSearch = function() {
    var args;
    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    return (function(func, args, ctor) {
      ctor.prototype = func.prototype;
      var child = new ctor, result = func.apply(child, args);
      return Object(result) === result ? result : child;
    })(FieldSearch, args, function(){});
  };

  FieldSearch = (function(_super) {
    __extends(FieldSearch, _super);

    function FieldSearch(opts) {
      V.demandGoodString(opts.url, 'opts.url');
      this.events = {};
      FieldSearch.__super__.constructor.apply(this, arguments);
      this.$input = this.$('input.search');
    }

    FieldSearch.prototype.doSearch = function() {
      return Metasoft.post();
    };

    FieldSearch.prototype.getData = function() {
      return F.getValues(this.$el);
    };

    return FieldSearch;

  })(Backbone.View);

}).call(this);
