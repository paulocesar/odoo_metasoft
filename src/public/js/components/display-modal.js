// Generated by CoffeeScript 1.9.0
(function() {
  var Backbone, DisplayModal, DropdownSearch, Metasoft, fieldValidator, jsRoot, moment, money, _,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __hasProp = {}.hasOwnProperty,
    __slice = [].slice;

  jsRoot = this;

  _ = jsRoot._, Backbone = jsRoot.Backbone, moment = jsRoot.moment, Metasoft = jsRoot.Metasoft;

  fieldValidator = Metasoft.fieldValidator, money = Metasoft.money, DropdownSearch = Metasoft.DropdownSearch;

  DisplayModal = (function(_super) {
    __extends(DisplayModal, _super);

    function DisplayModal(opts) {
      _.extend(this, opts);
      _.defaults(this.events, {
        'show.bs.modal': 'onShow',
        'hide.bs.modal': 'onHide'
      });
      DisplayModal.__super__.constructor.apply(this, arguments);
      this.$el.modal({
        backdrop: 'static',
        keyboard: false,
        show: false
      });
    }

    DisplayModal.prototype.isOpen = function() {
      return this.$el.attr('aria-hidden') === 'false';
    };

    DisplayModal.prototype.show = function() {
      this.$el.modal('show');
      return $('.modal-backdrop').click(this.onClickBackdrop);
    };

    DisplayModal.prototype.hide = function() {
      return this.$el.modal('hide');
    };

    DisplayModal.prototype.$f = function(name) {
      return this.$("[name='" + name + "']");
    };

    DisplayModal.prototype.onShow = function() {};

    DisplayModal.prototype.onHide = function() {};

    DisplayModal.prototype.onClickBackdrop = function() {};

    DisplayModal.prototype.get = function() {
      var args;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      return Metasoft.get.apply(Metasoft, args);
    };

    DisplayModal.prototype.post = function() {
      var args;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      return Metasoft.post.apply(Metasoft, args);
    };

    DisplayModal.prototype.postModel = function() {
      var args;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      return Metasoft.postModel.apply(Metasoft, args);
    };

    return DisplayModal;

  })(Backbone.View);

  Metasoft.DisplayModal = DisplayModal;

}).call(this);
